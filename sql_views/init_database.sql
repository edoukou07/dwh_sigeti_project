-- Script SQL d'initialisation SIGETI DWH
-- Cr√©e la base de donn√©es et l'utilisateur si ils n'existent pas
-- √Ä ex√©cuter en tant que superuser PostgreSQL (postgres)

-- V√©rifier et cr√©er l'utilisateur sigeti_user
DO $$
BEGIN
    IF NOT EXISTS (SELECT FROM pg_catalog.pg_user WHERE usename = 'sigeti_user') THEN
        CREATE USER sigeti_user WITH 
            PASSWORD 'sigeti123'
            CREATEDB 
            LOGIN;
        RAISE NOTICE '‚úÖ Utilisateur sigeti_user cr√©√©';
    ELSE
        RAISE NOTICE 'üë§ Utilisateur sigeti_user existe d√©j√†';
    END IF;
END
$$;

-- V√©rifier et cr√©er la base de donn√©es sigeti_dwh
DO $$
BEGIN
    IF NOT EXISTS (SELECT FROM pg_database WHERE datname = 'sigeti_dwh') THEN
        -- Note: CREATE DATABASE ne peut pas √™tre dans un bloc DO
        -- Cette partie doit √™tre ex√©cut√©e s√©par√©ment
        RAISE NOTICE 'üóÑÔ∏è  Base sigeti_dwh doit √™tre cr√©√©e manuellement';
    ELSE
        RAISE NOTICE 'üóÑÔ∏è  Base sigeti_dwh existe d√©j√†';
    END IF;
END
$$;

-- Cr√©er la base sigeti_dwh si elle n'existe pas (√† ex√©cuter apr√®s le bloc pr√©c√©dent)
SELECT 'CREATE DATABASE sigeti_dwh WITH OWNER = sigeti_user ENCODING = ''UTF8'' TEMPLATE = template0'
WHERE NOT EXISTS (SELECT FROM pg_database WHERE datname = 'sigeti_dwh')\gexec

-- Accorder les permissions sur la base
GRANT ALL PRIVILEGES ON DATABASE sigeti_dwh TO sigeti_user;

-- Script √† ex√©cuter DANS la base sigeti_dwh
\c sigeti_dwh

-- Cr√©er les extensions n√©cessaires
CREATE EXTENSION IF NOT EXISTS "uuid-ossp";
CREATE EXTENSION IF NOT EXISTS "btree_gin";
CREATE EXTENSION IF NOT EXISTS "pg_trgm";

-- Cr√©er les sch√©mas de base
CREATE SCHEMA IF NOT EXISTS staging;
CREATE SCHEMA IF NOT EXISTS dwh;
CREATE SCHEMA IF NOT EXISTS reporting;

-- Accorder les permissions sur les sch√©mas
GRANT ALL ON SCHEMA public TO sigeti_user;
GRANT ALL ON SCHEMA staging TO sigeti_user;
GRANT ALL ON SCHEMA dwh TO sigeti_user;
GRANT ALL ON SCHEMA reporting TO sigeti_user;

-- Permissions par d√©faut pour les futures tables
ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT ALL ON TABLES TO sigeti_user;
ALTER DEFAULT PRIVILEGES IN SCHEMA staging GRANT ALL ON TABLES TO sigeti_user;
ALTER DEFAULT PRIVILEGES IN SCHEMA dwh GRANT ALL ON TABLES TO sigeti_user;
ALTER DEFAULT PRIVILEGES IN SCHEMA reporting GRANT ALL ON TABLES TO sigeti_user;

-- Permissions sur les s√©quences
GRANT ALL ON ALL SEQUENCES IN SCHEMA public TO sigeti_user;
ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT ALL ON SEQUENCES TO sigeti_user;

-- Cr√©er une table de configuration syst√®me
CREATE TABLE IF NOT EXISTS system_config (
    id SERIAL PRIMARY KEY,
    config_key VARCHAR(100) UNIQUE NOT NULL,
    config_value TEXT,
    description TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Ins√©rer la configuration initiale
INSERT INTO system_config (config_key, config_value, description) 
VALUES 
    ('db_version', '1.0.0', 'Version de la structure de base de donn√©es'),
    ('initialized_at', CURRENT_TIMESTAMP::TEXT, 'Date d''initialisation de la base'),
    ('environment', 'development', 'Environnement (development/production)')
ON CONFLICT (config_key) DO NOTHING;

-- Accorder les permissions sur la table system_config
GRANT ALL ON system_config TO sigeti_user;
GRANT ALL ON system_config_id_seq TO sigeti_user;

-- Afficher un r√©sum√© de l'initialisation
SELECT 
    'Base sigeti_dwh initialis√©e avec succ√®s!' as status,
    current_database() as database,
    current_user as user,
    CURRENT_TIMESTAMP as initialized_at;

-- Lister les sch√©mas cr√©√©s
SELECT 
    'Sch√©mas disponibles:' as info,
    string_agg(schema_name, ', ') as schemas
FROM information_schema.schemata 
WHERE schema_name IN ('public', 'staging', 'dwh', 'reporting');

-- Lister les extensions install√©es
SELECT 
    'Extensions install√©es:' as info,
    string_agg(extname, ', ') as extensions
FROM pg_extension 
WHERE extname IN ('uuid-ossp', 'btree_gin', 'pg_trgm');