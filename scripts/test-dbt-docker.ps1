# Script PowerShell pour tester dbt dans l'environnement Docker SIGETI
# Usage: .\test-dbt-docker.ps1

Write-Host "üß™ Test de dbt dans l'environnement Docker SIGETI" -ForegroundColor Cyan
Write-Host "==================================================" -ForegroundColor Cyan

function Write-ColoredText {
    param([string]$Text, [string]$Color = "White")
    Write-Host $Text -ForegroundColor $Color
}

# V√©rifier que Docker Compose est disponible
Write-Host "`nüîç V√©rification des pr√©requis..." -ForegroundColor Yellow
try {
    $dockerComposeVersion = docker-compose --version 2>$null
    if ($dockerComposeVersion) {
        Write-ColoredText "‚úÖ Docker Compose disponible" "Green"
    } else {
        throw "Docker Compose non trouv√©"
    }
} catch {
    Write-ColoredText "‚ùå Docker Compose n'est pas install√© ou accessible" "Red"
    exit 1
}

# V√©rifier que le service dbt est op√©rationnel
Write-Host "`nüîç V√©rification du service dbt..." -ForegroundColor Yellow
try {
    $dbtStatus = docker-compose ps dbt-service 2>$null
    if ($dbtStatus -match "Up") {
        Write-ColoredText "‚úÖ Service dbt op√©rationnel" "Green"
    } else {
        Write-ColoredText "‚ö†Ô∏è  Service dbt non d√©marr√© - d√©marrage..." "Yellow"
        docker-compose up -d dbt-service
        Start-Sleep 10
        Write-ColoredText "‚úÖ Service dbt d√©marr√©" "Green"
    }
} catch {
    Write-ColoredText "‚ùå Impossible de v√©rifier le statut du service dbt" "Red"
    exit 1
}

# Test 1: Configuration dbt
Write-Host "`nüîç Test 1: Configuration dbt" -ForegroundColor Blue
Write-Host "--------------------------------" -ForegroundColor Blue
try {
    $debugResult = docker-compose exec -T dbt-service dbt debug --profiles-dir /opt/dbt_sigeti --target docker 2>&1
    if ($LASTEXITCODE -eq 0) {
        Write-ColoredText "‚úÖ Configuration dbt valide" "Green"
    } else {
        Write-ColoredText "‚ùå Probl√®me de configuration dbt" "Red"
        Write-Host $debugResult
        exit 1
    }
} catch {
    Write-ColoredText "‚ùå Erreur lors du test de configuration" "Red"
    exit 1
}

# Test 2: Connexion √† la base de donn√©es
Write-Host "`nüîç Test 2: Connexion √† la base de donn√©es" -ForegroundColor Blue
Write-Host "----------------------------------------" -ForegroundColor Blue
try {
    $connectionTest = @"
import psycopg2
try:
    conn = psycopg2.connect(
        host='host.docker.internal',
        port=5432,
        database='sigeti_dwh',
        user='sigeti_user',
        password='sigeti123'
    )
    print('‚úÖ Connexion DB r√©ussie')
    conn.close()
except Exception as e:
    print(f'‚ùå Erreur de connexion: {e}')
    exit(1)
"@

    docker-compose exec -T dbt-service python -c $connectionTest 2>&1 | Out-Host
    if ($LASTEXITCODE -eq 0) {
        Write-ColoredText "‚úÖ Connexion √† sigeti_dwh r√©ussie" "Green"
    } else {
        Write-ColoredText "‚ùå Impossible de se connecter √† sigeti_dwh" "Red"
        Write-ColoredText "üí° V√©rifiez que la base est initialis√©e:" "Yellow"
        Write-Host "   .\docker-sigeti.ps1 init-db"
        Write-Host "   # ou"
        Write-Host "   make init-db"
        exit 1
    }
} catch {
    Write-ColoredText "‚ùå Erreur lors du test de connexion" "Red"
    exit 1
}

# Test 3: Compilation des mod√®les
Write-Host "`nüîç Test 3: Compilation des mod√®les" -ForegroundColor Blue
Write-Host "--------------------------------" -ForegroundColor Blue
try {
    $parseResult = docker-compose exec -T dbt-service dbt parse --profiles-dir /opt/dbt_sigeti --target docker 2>&1
    if ($LASTEXITCODE -eq 0) {
        Write-ColoredText "‚úÖ Compilation des mod√®les r√©ussie" "Green"
    } else {
        Write-ColoredText "‚ùå Erreur de compilation des mod√®les" "Red"
        Write-Host $parseResult
        exit 1
    }
} catch {
    Write-ColoredText "‚ùå Erreur lors de la compilation" "Red"
    exit 1
}

# Test 4: Installation des d√©pendances
Write-Host "`nüîç Test 4: Installation des d√©pendances" -ForegroundColor Blue
Write-Host "--------------------------------------" -ForegroundColor Blue
try {
    docker-compose exec -T dbt-service dbt deps --profiles-dir /opt/dbt_sigeti --target docker 2>&1 | Out-Host
    if ($LASTEXITCODE -eq 0) {
        Write-ColoredText "‚úÖ Installation des d√©pendances r√©ussie" "Green"
    } else {
        Write-ColoredText "‚ö†Ô∏è  Pas de d√©pendances √† installer (normal si aucun packages.yml)" "Yellow"
    }
} catch {
    Write-ColoredText "‚ö†Ô∏è  Erreur lors de l'installation des d√©pendances (peut √™tre normal)" "Yellow"
}

# Test 5: Variables d'environnement
Write-Host "`nüîç Test 5: Variables d'environnement" -ForegroundColor Blue
Write-Host "-----------------------------------" -ForegroundColor Blue
try {
    $envVars = docker-compose exec -T dbt-service env 2>$null | Where-Object { $_ -match "SIGETI" }
    foreach ($var in $envVars) {
        if ($var -match "PASSWORD") {
            $parts = $var -split "=", 2
            $varName = $parts[0]
            $varValue = $parts[1]
            $maskedValue = "*" * $varValue.Length
            Write-ColoredText "‚úÖ $varName=$maskedValue" "Green"
        } else {
            Write-ColoredText "‚úÖ $var" "Green"
        }
    }
} catch {
    Write-ColoredText "‚ö†Ô∏è  Impossible de lire les variables d'environnement" "Yellow"
}

# R√©sum√© final
Write-Host "`nüéâ TOUS LES TESTS R√âUSSIS !" -ForegroundColor Green
Write-Host "==================================================" -ForegroundColor Green
Write-Host "üìã Configuration valid√©e:" -ForegroundColor Blue
Write-Host "   - Base de donn√©es: sigeti_dwh"
Write-Host "   - Utilisateur: sigeti_user"
Write-Host "   - Host: host.docker.internal"
Write-Host "   - Target dbt: docker"
Write-Host ""
Write-Host "üí° Commandes dbt disponibles dans le conteneur:" -ForegroundColor Yellow
Write-Host "   docker-compose exec dbt-service dbt run --target docker"
Write-Host "   docker-compose exec dbt-service dbt test --target docker"
Write-Host "   docker-compose exec dbt-service dbt docs generate --target docker"